Index: kdelibs-4.10.0/solid/solid/backends/udisks2/diskscannerproxy.cpp
===================================================================
--- /dev/null
+++ kdelibs-4.10.0/solid/solid/backends/udisks2/diskscannerproxy.cpp
@@ -0,0 +1,31 @@
+#include "diskscannerproxy.h"
+
+#include <QtCore/QDebug>
+#include <QtDBus/QDBusReply>
+
+/*
+ * Implementation of interface class OrgKdeSolidDiskScannerInterface
+ */
+
+#define INTERFACE "org.kde.Solid.DiskScanner"
+
+OrgKdeSolidDiskScannerInterface::OrgKdeSolidDiskScannerInterface(QObject* parent)
+    : QDBusAbstractInterface(INTERFACE, "/", INTERFACE, QDBusConnection::sessionBus(), parent)
+{
+}
+
+OrgKdeSolidDiskScannerInterface::~OrgKdeSolidDiskScannerInterface()
+{
+}
+
+Solid::OpticalDisc::ContentTypes OrgKdeSolidDiskScannerInterface::getContent(const QString& udi, const QString& file)
+{
+    QList<QVariant> argumentList;
+    QDBusReply<int> result = call(QLatin1String("getContent"), QVariant::fromValue(udi), QVariant::fromValue(file));
+    if (!result.isValid()) {
+        qWarning() << "D-Bus error while calling getContent: " << result.error();
+        return Solid::OpticalDisc::NoContent;
+    }
+    return static_cast<Solid::OpticalDisc::ContentTypes>(result.value());
+}
+// kate: indent-mode cstyle; indent-width 4; replace-tabs on; 
Index: kdelibs-4.10.0/solid/solid/backends/udisks2/diskscannerproxy.h
===================================================================
--- /dev/null
+++ kdelibs-4.10.0/solid/solid/backends/udisks2/diskscannerproxy.h
@@ -0,0 +1,34 @@
+/*
+ * This file was generated by qdbusxml2cpp version 0.7
+ * Command line was: qdbusxml2cpp -N org.kde.Solid.DiskScanner.xml -p diskscannerproxy.cpp
+ *
+ * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
+ *
+ * This is an auto-generated file.
+ * Do not edit! All changes made to it will be lost.
+ */
+
+#ifndef DISKSCANNERPROXY_CPP_1360423945
+#define DISKSCANNERPROXY_CPP_1360423945
+
+#include <QtDBus/QDBusAbstractInterface>
+
+#include <solid/opticaldisc.h>
+
+/*
+ * Proxy class for interface org.kde.Solid.DiskScanner
+ */
+class OrgKdeSolidDiskScannerInterface: public QDBusAbstractInterface
+{
+    Q_OBJECT
+public:
+
+    OrgKdeSolidDiskScannerInterface(QObject* parent = 0);
+
+    ~OrgKdeSolidDiskScannerInterface();
+
+    Solid::OpticalDisc::ContentTypes getContent(const QString& udi, const QString& file);
+};
+
+#endif
+// kate: indent-mode cstyle; indent-width 4; replace-tabs on; 
Index: kdelibs-4.10.0/solid/solid/CMakeLists.txt
===================================================================
--- kdelibs-4.10.0.orig/solid/solid/CMakeLists.txt
+++ kdelibs-4.10.0/solid/solid/CMakeLists.txt
@@ -282,6 +282,7 @@ if(NOT WIN32 AND NOT APPLE)
            backends/udisks2/udisksstorageaccess.cpp
            backends/udisks2/udisksgenericinterface.cpp
            backends/udisks2/dbus/manager.cpp
+           backends/udisks2/diskscannerproxy.cpp
            )
        else ( WITH_SOLID_UDISKS2 )
            message(STATUS "Building Solid UDisks backend." )
Index: kdelibs-4.10.0/solid/solid/backends/udisks2/udisksopticaldisc.cpp
===================================================================
--- kdelibs-4.10.0.orig/solid/solid/backends/udisks2/udisksopticaldisc.cpp
+++ kdelibs-4.10.0/solid/solid/backends/udisks2/udisksopticaldisc.cpp
@@ -175,6 +175,7 @@ OpticalDisc::OpticalDisc(Device *dev)
     /*qDebug() << "\tProperties:" << */ m_udevDevice.deviceProperties(); // initialize the properties DB so that it doesn't crash further down, #298416
 
     m_drive = new Device(m_device->prop("Drive").value<QDBusObjectPath>().path());
+    m_prober = new OrgKdeSolidDiskScannerInterface(this);
 }
 
 OpticalDisc::~OpticalDisc()
@@ -241,7 +242,7 @@ Solid::OpticalDisc::ContentTypes Optical
         return Solid::OpticalDisc::NoContent;
     }
 
-        const QByteArray deviceFile = m_device->prop("Device").toByteArray();
+    const QString deviceFile = m_device->prop("Device").toString();
 
     Solid::OpticalDisc::ContentTypes m_cachedContent = Solid::OpticalDisc::NoContent;
         const bool hasData = m_drive->prop("OpticalNumDataTracks").toUInt() > 0;
@@ -249,7 +250,7 @@ Solid::OpticalDisc::ContentTypes Optical
 
         if ( hasData ) {
             m_cachedContent |= Solid::OpticalDisc::Data;
-            m_cachedContent |= advancedDiscDetect(deviceFile);
+            m_cachedContent |= m_prober->getContent(m_drive->udi(), deviceFile);
         }
         if ( hasAudio )
             m_cachedContent |= Solid::OpticalDisc::Audio;
Index: kdelibs-4.10.0/solid/solid/backends/udisks2/udisksopticaldisc.h
===================================================================
--- kdelibs-4.10.0.orig/solid/solid/backends/udisks2/udisksopticaldisc.h
+++ kdelibs-4.10.0/solid/solid/backends/udisks2/udisksopticaldisc.h
@@ -28,6 +28,7 @@
 
 #include "udisksstoragevolume.h"
 #include "udisksdevice.h"
+#include "diskscannerproxy.h"
 
 namespace Solid
 {
@@ -56,6 +57,7 @@ private:
     QString media() const;
     Device * m_drive;
     UdevQt::Device m_udevDevice;
+    mutable OrgKdeSolidDiskScannerInterface *m_prober;
 };
 
 }
